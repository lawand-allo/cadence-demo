// Code generated by MockGen. DO NOT EDIT.
// Source: cadence-demo/http/dependency/usecase (interfaces: GetOrderUsecase)

// Package mock is a generated GoMock package.
package mock

import (
	model "cadence-demo/model"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockGetOrderUsecase is a mock of GetOrderUsecase interface.
type MockGetOrderUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockGetOrderUsecaseMockRecorder
}

// MockGetOrderUsecaseMockRecorder is the mock recorder for MockGetOrderUsecase.
type MockGetOrderUsecaseMockRecorder struct {
	mock *MockGetOrderUsecase
}

// NewMockGetOrderUsecase creates a new mock instance.
func NewMockGetOrderUsecase(ctrl *gomock.Controller) *MockGetOrderUsecase {
	mock := &MockGetOrderUsecase{ctrl: ctrl}
	mock.recorder = &MockGetOrderUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGetOrderUsecase) EXPECT() *MockGetOrderUsecaseMockRecorder {
	return m.recorder
}

// GetOrder mocks base method.
func (m *MockGetOrderUsecase) GetOrder(arg0 context.Context, arg1 uuid.UUID) (*model.GetOrderResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrder", arg0, arg1)
	ret0, _ := ret[0].(*model.GetOrderResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrder indicates an expected call of GetOrder.
func (mr *MockGetOrderUsecaseMockRecorder) GetOrder(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrder", reflect.TypeOf((*MockGetOrderUsecase)(nil).GetOrder), arg0, arg1)
}
