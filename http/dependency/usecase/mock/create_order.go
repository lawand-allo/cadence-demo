// Code generated by MockGen. DO NOT EDIT.
// Source: cadence-demo/http/dependency/usecase (interfaces: CreateOrderUsecase)

// Package mock is a generated GoMock package.
package mock

import (
	model "cadence-demo/model"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockCreateOrderUsecase is a mock of CreateOrderUsecase interface.
type MockCreateOrderUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockCreateOrderUsecaseMockRecorder
}

// MockCreateOrderUsecaseMockRecorder is the mock recorder for MockCreateOrderUsecase.
type MockCreateOrderUsecaseMockRecorder struct {
	mock *MockCreateOrderUsecase
}

// NewMockCreateOrderUsecase creates a new mock instance.
func NewMockCreateOrderUsecase(ctrl *gomock.Controller) *MockCreateOrderUsecase {
	mock := &MockCreateOrderUsecase{ctrl: ctrl}
	mock.recorder = &MockCreateOrderUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreateOrderUsecase) EXPECT() *MockCreateOrderUsecaseMockRecorder {
	return m.recorder
}

// CreateOrder mocks base method.
func (m *MockCreateOrderUsecase) CreateOrder(arg0 context.Context, arg1 model.CreateOrderRequest) (uuid.UUID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrder", arg0, arg1)
	ret0, _ := ret[0].(uuid.UUID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOrder indicates an expected call of CreateOrder.
func (mr *MockCreateOrderUsecaseMockRecorder) CreateOrder(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrder", reflect.TypeOf((*MockCreateOrderUsecase)(nil).CreateOrder), arg0, arg1)
}
